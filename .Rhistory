labels <- c("Legend","Total Black Population", "Total Black Prison Population")
pie(x, labels, main = "Black Prison Population as a Fraction of Total Black Population in 2015", col = rainbow(length(x)))
legend("bottom", c("Total Black Population","Total Black Prison Population"), cex = 0.8,
fill = rainbow(length(x)))
x <- c(28229706,428963)
labels <- c("Total Black Population", "Total Black Prison Population")
pie(x, labels, main = "Black Prison Population as a Fraction of Total Black Population in 2015", col = rainbow(length(x)))
legend("bottomleft", c("Legend","Total Black Population","Total Black Prison Population"), cex = 0.8,
fill = rainbow(length(x)))
x <- c(28229706,428963)
labels <- c("Total Black Population", "Total Black Prison Population")
pie(x, labels, main = "Black Prison Population as a Fraction of Total Black Population in 2015", col = rainbow(length(x)))
legend("bottomleft", c("Total Black Population","Total Black Prison Population"), cex = 0.8,
fill = rainbow(length(x)))
x <- c(28229706,428963)
labels <- c("Total Black Population", "Total Black Prison Population")
pie(x, labels, main = "Black Prison Population as a Fraction of Total Black Population in 2015", col = rainbow(length(x)))
legend("bottomleft", c("Total Black Population","Total Black Prison Population"), cex = 0.8,
title="Legend",fill = rainbow(length(x)))
x <- c(28229706,428963)
labels <- c("Total Black Population", "Total Black Prison Population")
pie(x, labels, main = "Black Prison Population as a Fraction of Total Black Population in 2015", col = rainbow(length(x)))
legend("bottomleft", c("Total Black Population","Total Black Prison Population"), cex = 0.8,
title="LEGEND",fill = rainbow(length(x)))
x <- c(28229706,428963)
labels <- c("Total Black Population", "Total Black Prison Population")
pie(x, labels, main = "Black Prison Population as a Fraction of Total Black Population in 2015", col = rainbow(length(x)))
legend("bottomright", c("Total Black Population","Total Black Prison Population"), cex = 0.8,
title="LEGEND",fill = rainbow(length(x)))
x <- c(28229706,428963)
labels <- c("Total Black Population", "Total Black Prison Population")
pie(x, labels, main = "Black Prison Population as a Fraction of Total Black Population in 2015", col = rainbow(length(x)))
legend("topleft", c("Total Black Population","Total Black Prison Population"), cex = 0.8,
title="LEGEND",fill = rainbow(length(x)))
x <- c(28229706,428963)
labels <- c("Total Black Population", "Total Black Prison Population")
pie(x, labels, main = "Black Prison Population as a Fraction of Total Black Population in 2015", col = rainbow(length(x)))
legend("bottomleft", c("Total Black Population","Total Black Prison Population"), cex = 0.8,
title="LEGEND",fill = rainbow(length(x)))
View(trends_time)
View(year_table)
View(state_ratio_table)
map_table<-select(
numbers_one,
state,
year,
county_name,
race_ratio
)
View(map_table)
mapping<-filter(
map_table,
year=="2015"
)
View(mapping)
mapping<-filter(
map_table,
year=="2015",
state=="CA"
)
View(mapping)
mapping<-filter(
map_table,
year=="2015",
state=="WI"
)
mapping<-filter(
map_table,
year=="2015",
state=="TX"
)
mapping<-filter(
map_table,
year=="2015",
state=="MO"
)
mapping<-filter(
map_table,
year=="2015",
state=="GA"
)
ggplot(mapping, aes(x = long, y = lat, group = group, fill = Race_ratio)) +
geom_polygon(colour = "black")
library(viridis)
p <- ggplot() +
geom_polygon(data = spdf_fortified, aes(fill = nb_equip, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(1,5,10,20,50,100), name="Number of restaurant", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "South of France Restaurant concentration",
subtitle = "Number of restaurant per city district",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(0.7, 0.09)
) +
coord_map()
p
library(viridis)
devtools::install_github(“UrbanInstitute/urbnmapr”)
devtools::install_github(“UrbanInstitute/urbnmapr”)
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = horate)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urban_map()
mapping %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = horate)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urban_map()
mapping_tab<-filter(
map_table,
year=="2015",
state=="GA"
)
library(tidyverse)
theme_set(theme_bw(base_size=16))
us_states <- map_data("state")
us_states <- map_data("state")
us_counties <- map_data("county")
head(us_states)
p <- ggplot(data = us_states,
mapping = aes(x = long, y = lat,
group = group, fill = region))
View(p)
p + geom_polygon() +
guides(fill = FALSE)
View(mapping_tab)
ratio_state <- mapping_tab %>%
mutate(state=tolower(state)) %>%
group_by(state) %>%
summarize(ratio_mean= mean(mapping_tab$race_ratio,na.rm=TRUE))
View(ratio_state)
map_table<-select(
numbers_one,
state,
year,
county_name,
race_ratio
)
View(map_table)
mapping_tab<-filter(
map_table,
year=="2015"
)
View(mapping_tab)
ratio_state <- mapping_tab %>%
mutate(state=tolower(state)) %>%
group_by(state) %>%
summarize(ratio_mean= mean(mapping_tab$race_ratio,na.rm=TRUE))
View(ratio_state)
mapping_tab<-filter(
map_table,
year=="2015",
state=="GA"
)
ratio_state <- mapping_tab %>%
mutate(state=tolower(state)) %>%
group_by(state) %>%
summarize(ratio_mean= mean(mapping_tab$race_ratio,na.rm=TRUE))
mapping_tab<-filter(
map_table,
year=="2000",
state=="GA"
)
ratio_state <- mapping_tab %>%
mutate(state=tolower(state)) %>%
group_by(state) %>%
summarize(ratio_mean= mean(mapping_tab$race_ratio,na.rm=TRUE))
ratio_state <- mapping_tab %>%
mutate(state=tolower(state)) %>%
group_by(state) %>%
summarize(ratio_mean= mean(mapping_tab$race_ratio,na.rm=TRUE))
View(ratio_state)
mapping_tab<-filter(
map_table,
year=="2015",
state=="GA"
)
ratio_state <- mapping_tab %>%
mutate(state=tolower(state)) %>%
group_by(state) %>%
summarize(ratio_mean= mean(mapping_tab$race_ratio,na.rm=TRUE))
View(ratio_state)
mapping_tab<-filter(
map_table,
year=="2015"
#state=="GA"
)
ratio_state <- mapping_tab %>%
mutate(state=tolower(state)) %>%
group_by(state) %>%
summarize(ratio_mean= mean(mapping_tab$race_ratio,na.rm=TRUE))
View(ratio_state)
ratio_state <- mapping_tab %>%
group_by(state) %>%
summarize(ratio_mean= mean(mapping_tab$race_ratio,na.rm=TRUE))
ratio_state <- mapping_tab %>%
group_by(state) %>%
summarize(ratio_mean= mean(mapping_tab$race_ratio,na.rm=TRUE))
ratio_state <- mapping_tab %>%
group_by(state) %>%
summarize(ratio_mean= mean(mapping_tab$race_ratio,na.rm=TRUE))
mapping_tab<-filter(
map_table,
year=="2015",
state=="GA"
)
ratio_state <- mapping_tab %>%
group_by(state) %>%
summarize(ratio_mean= mean(mapping_tab$race_ratio,na.rm=TRUE))
ratio_state <- mapping_tab %>%
filter(race_ratio >=0) %>%
group_by(state) %>%
summarize(ratio_mean= mean(mapping_tab$race_ratio,na.rm=TRUE))
mapping_tab<-filter(
map_table,
year=="2015",
)
ratio_state <- mapping_tab %>%
filter(race_ratio >=0) %>%
group_by(state) %>%
summarize(ratio_mean= mean(mapping_tab$race_ratio,na.rm=TRUE))
ratio_state <- mapping_tab %>%
filter(race_ratio >=0) %>%
group_by(state) %>%)
ratio_state <- mapping_tab %>%
filter(race_ratio >=0) %>%
group_by(state) %>%
ratio_state <- mapping_tab %>%
filter(race_ratio >=0) %>%
group_by(state) %>%
View(ratio_state)
ratio_state <- mapping_tab %>%
filter(race_ratio >=0) %>%
group_by(state)
ratio_state <- mapping_tab %>%
filter(race_ratio >0) %>%
group_by(state)
ratio_state <- mapping_tab %>%
filter(race_ratio >1) %>%
group_by(state)
mapping_tab<-filter(
map_table,
year=="2015",
state=="AL"
)
ratio_state <- mapping_tab %>%
group_by(state)
ratio_state <- mapping_tab %>%
group_by(state)
filter(na.rm="TRUE"
)
mapping_tab<-filter(
map_table,
year=="2015",
state=="AL"
)
ratio_state <- mapping_tab %>%
filter(race_ratio,na.rm="TRUE") %>%
group_by(state)
ratio_state <- mapping_tab %>%
filter(race_ratio,na.rm=="TRUE") %>%
group_by(state)
ratio_state <- mapping_tab %>%
group_by(state)
ratio_state <- mapping_tab %>%
group_by(state)
ratio_state%>% drop_na()
ga_ratio<-ratio_state%>% drop_na()
View(ga_ratio)
us_states %>%
left_join(ga_ratio, by=c("region"="state"))
us_states %>%
left_join(ga_ratio, by=c("region"="state"))
ggplot(aes(x=long,y=lat,group=group, fill=mmr_min)) +
geom_polygon(color = "gray90", size = 0.1) +
#coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
coord_map(projection = "albers", lat0 = 45, lat1 = 55) +
scale_fill_continuous(type = "viridis")+
#scale_fill_brewer("Oranges")+
theme(legend.position="bottom",
axis.line=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid=element_blank())
ggplot(aes(x=long,y=lat,group=group, fill=race_ratio)) +
geom_polygon(color = "gray90", size = 0.1) +
#coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
coord_map(projection = "albers", lat0 = 45, lat1 = 55) +
scale_fill_continuous(type = "viridis")+
#scale_fill_brewer("Oranges")+
theme(legend.position="bottom",
axis.line=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid=element_blank())
us_states %>%
left_join(ga_ratio, by=c("region"="state"))
map("state", regions="georgia")
map("county", interior=TRUE, regions="california",
xlim=c(-119.023098 ,-117.435574), ylim=c(33.70319 ,34.941657))
library(usmap) #import the package
library(ggplot2)
library(usmap)
install.packages("usmap")
library(usmap)
library(usmap)
plot_usmap(include = c("AL")) +
labs(title = "AL Prison Ratio") +
theme(panel.background = element_rect(color = "blue"))
plot_usmap(include = c("AL")) +
labs(title = "AL Prison Ratio")
al_map <- ggplot(data=alabama, mapping=aes(x=long, y=lat, group=group)) +
coord_fixed(1.3) +
geom_polygon(color="black", fill="gray") +
geom_polygon(data=alabama_county, fill=NA, color="white") +
geom_polygon(color="black", fill=NA) +
ggtitle('Alabama Map with Counties') +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank())
al_map
alabama <- subset(state, region=="alabama")
counties <- map_data("county")
alabama_county <- subset(counties, region=="alabama")
al_map <- ggplot(data=alabama, mapping=aes(x=long, y=lat, group=group)) +
coord_fixed(1.3) +
geom_polygon(color="black", fill="gray") +
geom_polygon(data=alabama_county, fill=NA, color="white") +
geom_polygon(color="black", fill=NA) +
ggtitle('Alabama Map with Counties') +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank())
al_map
library(ggplot2)
library(maps)
library(mapdata)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(maps)
library(mapdata)
alabama <- subset(state, region=="alabama")
counties <- map_data("county")
alabama_county <- subset(counties, region=="alabama")
al_map <- ggplot(data=alabama, mapping=aes(x=long, y=lat, group=group)) +
coord_fixed(1.3) +
geom_polygon(color="black", fill="gray") +
geom_polygon(data=alabama_county, fill=NA, color="white") +
geom_polygon(color="black", fill=NA) +
ggtitle('Alabama Map with Counties') +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank())
al_map
alabama <- subset(state, region=="alabama")
counties <- map_data("county")
alabama_county <- subset(counties, region=="alabama")
ca_map <- ggplot(data=alabama, mapping=aes(x=long, y=lat, group=group)) +
coord_fixed(1.3) +
geom_polygon(color="black", fill="gray") +
geom_polygon(data=alabama_county, fill=NA, color="white") +
geom_polygon(color="black", fill=NA) +
ggtitle('Alabama Map with Counties') +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank())
ca_map
ca_map <- ggplot(data=alabama, mapping=aes(x=long, y=lat, group=group)) +
coord_fixed(1.3) +
geom_polygon(color="black", fill="gray") +
geom_polygon(data=alabama_county, fill=NA, color="white") +
geom_polygon(color="black", fill=NA) +
ggtitle('Alabama Map with Counties') +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank())
ca_map
alabama <- subset(state, region=="alabama")
counties <- map_data("county")
alabama_county <- subset(counties, region=="alabama")
state <- map_data("state")
ggplot(data=state, aes(x=long, y=lat, fill=region, group=group)) +
geom_polygon(color = "white") +
guides(fill=FALSE) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) +
ggtitle('U.S. Map with States') +
coord_fixed(1.3)
alabama <- subset(state, region=="alabama")
counties <- map_data("county")
alabama_county <- subset(counties, region=="alabama")
ca_map <- ggplot(data=alabama, mapping=aes(x=long, y=lat, group=group)) +
coord_fixed(1.3) +
geom_polygon(color="black", fill="gray") +
geom_polygon(data=alabama_county, fill=NA, color="white") +
geom_polygon(color="black", fill=NA) +
ggtitle('Alabama Map with Counties') +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank())
ca_map
library(tidyverse)
library(sf)
library(plotly)
install.packages("plotly")
library(tidyverse)
library(sf)
library(plotly)
library(tidyverse)
library(sf)
library(plotly)
install.packages("sf")
library(tidyverse)
library(sf)
library(plotly)
plot_usmap(data = ga_ratio, values = "race_ratio", include = c("AL"), color = "blue") +
scale_fill_continuous(low = "white", high = "blue", name = "Poverty Percentage Estimates", label = scales::comma) +
labs(title = "New England Region", subtitle = "Poverty Percentage Estimates for New England Counties in 2014") +
theme(legend.position = "right")
plot_usmap(data = ga_ratio, values = race_ratio, include = c("AL"), color = "blue") +
scale_fill_continuous(low = "white", high = "blue", name = "Poverty Percentage Estimates", label = scales::comma) +
labs(title = "New England Region", subtitle = "Poverty Percentage Estimates for New England Counties in 2014") +
theme(legend.position = "right")
df <- data.frame(
fips = c("1.01", "1.02", "1,035"),
values = c(1, 2, 1)
)
plot_usmap(data = df)
library(usmap)
df <- data.frame(
fips = c("1.01", "1.02", "1,035"),
values = c(1, 2, 1)
)
plot_usmap(data = df)
plot_usmap(
data = statepop, values = "pop_2015", include = c("AL"), color = "red"
) +
scale_fill_continuous(
low = "white", high = "red", name = "Population (2015)", label = scales::comma
) +
labs(title = "Western US States", subtitle = "These are the states in the Pacific Timezone.") +
theme(legend.position = "right")
map1<-ggplot(ga_ratio,aes(x=county_name,y=race_ratio,group=group))+
geom_polygon(aes(fill=race_ratio),color="black")
map1
map1<-ggplot(ga_ratio,aes(x=county_name,y=race_ratio))+
geom_polygon(aes(fill=race_ratio),color="black")
map1
ggplot(data=state, aes(x=long, y=lat, fill=region, group=group)) +
geom_polygon(color = "white") +
guides(fill=FALSE) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) +
ggtitle('U.S. Map with States') +
coord_fixed(1.3)
alabama <- subset(state, region=="alabama")
counties <- map_data("county")
alabama_county <- subset(counties, region=="alabama")
ca_map <- ggplot(data=alabama, mapping=aes(x=long, y=lat, group=group)) +
coord_fixed(1.3) +
geom_polygon(color="black", fill="gray") +
geom_polygon(data=alabama_county, fill=NA, color="white") +
geom_polygon(color="black", fill=NA) +
ggtitle('Alabama Map with Counties') +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank())
ca_map
ggplot(data=state, aes(x=long, y=lat, fill=region, group=group)) +
geom_polygon(color = "white") +
guides(fill=FALSE) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) +
ggtitle('U.S. Map with States') +
coord_fixed(1.3)
alabama <- subset(state, region=="alabama")
counties <- map_data("county")
alabama_county <- subset(counties, region=="alabama")
ca_map <- ggplot(data=alabama, mapping=aes(x=long, y=lat, group=group)) +
coord_fixed(1.3) +
geom_polygon(color="black", fill="gray") +
geom_polygon(data=alabama_county, fill=NA, color="white") +
geom_polygon(color="black", fill=NA) +
ggtitle('Alabama Map with Counties') +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank())
ca_map
